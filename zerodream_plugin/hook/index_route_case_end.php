
<?php exit;

/*
    Powered by ZeroDream
    Optimized by ZeroDream
	https://www.zerodream.top/xiuno.htm
	
	修改文件将有禁止使用帐户风险
*/

 case 'zd_plugin_user': !defined('DEBUG') AND exit('Access Denied.'); $action = param(1); function zd_plugin_user_check() { global $_check; $zd_kv_zerodream_plugin = zd_kv_get('zerodream_plugin'); $key = $zd_kv_zerodream_plugin['key']; $check = md5('zd_plugin_user_'.$key); if($check!=$_check) zd_plugin_user_message($error='b02_01', $type); } function zd_plugin_user_message($error, $type) { global $zd_message; if($zd_message['error']) return; $zd_message['error'] = $error; $zd_message['type'] = $type; } switch($action) { case 'admin': !defined('DEBUG') AND exit('Access Denied.'); $type = param(2); $_check = param(3); function zd_plugin_user_admin_response_phpinfo() { global $conf,$zd_message; if($zd_message['error']) { $json_arr = array('code'=>$zd_message['error']); $return = json_encode($json_arr); } else { $return = phpinfo(); } return $return; } function zd_plugin_user_admin_response_clear_tmp() { global $conf,$zd_message; if($zd_message['error']) { $json_arr = array('code'=>$zd_message['error']); } else { rmdir_recusive($conf['tmp_path'], 1); $json_arr = array('code'=>0); } $return = json_encode($json_arr); return $return; } if($type=='phpinfo') { zd_plugin_user_check(); echo zd_plugin_user_admin_response_phpinfo(); } elseif($type=='clear_tmp') { zd_plugin_user_check(); echo zd_plugin_user_admin_response_clear_tmp(); } break; case 'check': !defined('DEBUG') AND exit('Access Denied.'); $type = param(2); function zd_plugin_user_check_data_response_plugin() { global $zd_message; include _include(APP_PATH.'plugin/zerodream_plugin/admin/model/zd_plugin.func.php'); $zerodream_plugin_md5 = zd_plugin_zerodream_plugin_md5_file(); $zerodream_plugin_dir_existence = zd_plugin_zerodream_plugin_dir_existence(); $directory = 'plugin/'; $scandir = scandir($directory); foreach($scandir as $value_scandir) { if($value_scandir!='.' && $value_scandir!='..') { $filename_conf = $directory.$value_scandir.'/conf.json'; $json_str = file_get_contents($filename_conf); $json_plugin_arr = json_decode($json_str, true); if(is_array($json_plugin_arr)) { $local_plugins[$value_scandir]['version'] = $json_plugin_arr['version']; $local_plugins[$value_scandir]['installed'] = $json_plugin_arr['installed']; $local_plugins[$value_scandir]['enable'] = $json_plugin_arr['enable']; $filename_setting = $directory.$value_scandir.'/setting.php'; if(is_file($filename_setting)) $local_plugins[$value_scandir]['setting'] = 1; else $local_plugins[$value_scandir]['setting'] = 0; } } } if($zd_message['error']) { $json_arr = array('code'=>$zd_message['error']); } else { $json_arr['zd_plugin_information']['zerodream_plugin_md5'] = $zerodream_plugin_md5; $json_arr['zd_plugin_information']['zerodream_plugin_dir_existence'] = $zerodream_plugin_dir_existence; $json_arr['plugin'] = $local_plugins; } $return = json_encode($json_arr); return $return; } function zd_plugin_user_check_install_response() { $json_arr = array('code'=>0); $return = json_encode($json_arr); return $return; } function zd_plugin_user_check_download_data() { global $_check,$check_salt; $json_str = file_get_contents('php://input'); $json_arr = json_decode($json_str, true); $_check = $json_arr['check']; $check_salt = $json_arr['check_salt']; } function zd_plugin_user_check_download_response() { global $check_salt,$zd_message; if($zd_message['error']) { $json_arr['code'] = '1'; } else { $filename = APP_PATH."data/zerodream_plugin/check/$check_salt.download"; $data_str = file_get_contents($filename); unlink($filename); $json_arr['code'] = '0'; $json_arr['check'] = $data_str; } $return = json_encode($json_arr); return $return; } if($type=='data') { $_check = param(3); zd_plugin_user_check(); echo zd_plugin_user_check_data_response_plugin(); } elseif($type=='install') { echo zd_plugin_user_check_install_response(); } elseif($type=='download') { zd_plugin_user_check_download_data(); zd_plugin_user_check(); echo zd_plugin_user_check_download_response(); } break; case 'key_query': !defined('DEBUG') AND exit('Access Denied.'); $apply_id = param('apply_id'); $apply_url = param('apply_url'); function zd_plugin_user_key_query_request() { global $apply_id,$apply_url,$zd_curl_data; $url = ZERODREAM_URL."zd_plugin-user-key_query.htm"; $data = json_encode(array('apply_id'=>$apply_id,'apply_url'=>$apply_url)); $zd_curl = zd_curl($url, $data, $array=array('method'=>'POST')); $zd_curl_data = $zd_curl['data']; $zd_curl_error = $zd_curl['error']; if($zd_curl_error) message(-1, "curl_error: $zd_curl_error"); elseif(empty($zd_curl_data)) message(-1, '数据不存在'); } function zd_plugin_user_key_query_response() { global $zd_curl_data; $json_str = $zd_curl_data; $json_arr = json_decode($json_str, true); $code = $json_arr['code']; if($code==0) { $zd_key = $json_arr['zd_key']; $zd_kv_zerodream_plugin = zd_kv_get('zerodream_plugin'); $zd_kv_zerodream_plugin['key'] = $zd_key; zd_kv_set('zerodream_plugin', $zd_kv_zerodream_plugin); message(0, '申请成功'); } elseif($code==1) { $message = $json_arr['message']; message(1, $message); } elseif($code==2) { message(2, '申请等待'); } elseif($code==3) { message(3, '申请取消'); } } zd_plugin_user_key_query_request(); zd_plugin_user_key_query_response(); break; } break; ?>