
<?php

/*
    Powered by ZeroDream
	https://www.zerodream.top/xiuno.htm
	
	修改文件将有禁止使用帐户风险
*/

 if (version_compare(PHP_VERSION, '5.0.0', '<') ) exit("Sorry, this version of PHPMailer will only run on PHP version 5 or greater!\n"); class PHPMailer { public $Priority = 3; public $CharSet = 'UTF-8'; public $ContentType = 'text/plain'; public $Encoding = '8bit'; public $ErrorInfo = ''; public $From = 'root@localhost'; public $FromName = 'Root User'; public $Sender = ''; public $Subject = ''; public $Body = ''; public $AltBody = ''; protected $MIMEBody = ''; protected $MIMEHeader = ''; protected $SentMIMEMessage = ''; public $WordWrap = 0; public $Mailer = 'mail'; public $Sendmail = '/usr/sbin/sendmail'; public $PluginDir = ''; public $ConfirmReadingTo = ''; public $Hostname = ''; public $MessageID = ''; public $Host = 'localhost'; public $Port = 25; public $Helo = ''; public $SMTPSecure = ''; public $SMTPAuth = false; public $Username = ''; public $Password = ''; public $Timeout = 10; public $SMTPDebug = false; public $SMTPKeepAlive = false; public $SingleTo = false; public $SingleToArray = array(); public $LE = "\n"; public $DKIM_selector = 'phpmailer'; public $DKIM_identity = ''; public $DKIM_passphrase = ''; public $DKIM_domain = ''; public $DKIM_private = ''; public $action_function = ''; public $Version = '5.2.1'; public $XMailer = ''; protected $smtp = NULL; protected $to = array(); protected $cc = array(); protected $bcc = array(); protected $ReplyTo = array(); protected $all_recipients = array(); protected $attachment = array(); protected $CustomHeader = array(); protected $message_type = ''; protected $boundary = array(); protected $language = array(); protected $error_count = 0; protected $sign_cert_file = ''; protected $sign_key_file = ''; protected $sign_key_pass = ''; protected $exceptions = false; const STOP_MESSAGE = 0; const STOP_CONTINUE = 1; const STOP_CRITICAL = 2; public function __construct($zd_1493d_0 = false) { $zd_2114f_1->exceptions = ($zd_1493d_0 == true); } public function IsHTML($zd_b5673_3 = true) { if ($zd_b5673_3) { $zd_2114f_1->ContentType = 'text/html'; } else { $zd_2114f_1->ContentType = 'text/plain'; } } public function IsSMTP() { $zd_2114f_1->Mailer = 'smtp'; } public function IsMail() { $zd_2114f_1->Mailer = 'mail'; } public function IsSendmail() { if (!stristr(ini_get('sendmail_path'), 'sendmail')) { $zd_2114f_1->Sendmail = '/var/qmail/bin/sendmail'; } $zd_2114f_1->Mailer = 'sendmail'; } public function IsQmail() { if (stristr(ini_get('sendmail_path'), 'qmail')) { $zd_2114f_1->Sendmail = '/var/qmail/bin/sendmail'; } $zd_2114f_1->Mailer = 'sendmail'; } public function AddAddress($zd_6c877_13, $zd_7d719_14 = '') { return $zd_2114f_1->AddAnAddress('to', $zd_6c877_13, $zd_7d719_14); } public function AddCC($zd_6c877_13, $zd_7d719_14 = '') { return $zd_2114f_1->AddAnAddress('cc', $zd_6c877_13, $zd_7d719_14); } public function AddBCC($zd_6c877_13, $zd_7d719_14 = '') { return $zd_2114f_1->AddAnAddress('bcc', $zd_6c877_13, $zd_7d719_14); } public function AddReplyTo($zd_6c877_13, $zd_7d719_14 = '') { return $zd_2114f_1->AddAnAddress('Reply-To', $zd_6c877_13, $zd_7d719_14); } protected function AddAnAddress($zd_0004e_33, $zd_6c877_13, $zd_7d719_14 = '') { if (!preg_match('/^(to|cc|bcc|Reply-To)$/', $zd_0004e_33)) { $zd_2114f_1->SetError($zd_2114f_1->Lang('Invalid recipient array').': '.$zd_0004e_33); if ($zd_2114f_1->exceptions) { throw new phpmailerException('Invalid recipient array: ' . $zd_0004e_33); } if ($zd_2114f_1->SMTPDebug) { echo $zd_2114f_1->Lang('Invalid recipient array').': '.$zd_0004e_33; } return false; } $zd_6c877_13 = trim($zd_6c877_13); $zd_7d719_14 = trim(preg_replace('/[\r\n]+/', '', $zd_7d719_14)); if (!self::ValidateAddress($zd_6c877_13)) { $zd_2114f_1->SetError($zd_2114f_1->Lang('invalid_address').': '. $zd_6c877_13); if ($zd_2114f_1->exceptions) { throw new phpmailerException($zd_2114f_1->Lang('invalid_address').': '.$zd_6c877_13); } if ($zd_2114f_1->SMTPDebug) { echo $zd_2114f_1->Lang('invalid_address').': '.$zd_6c877_13; } return false; } if ($zd_0004e_33 != 'Reply-To') { if (!isset($zd_2114f_1->all_recipients[strtolower($zd_6c877_13)])) { array_push($zd_2114f_1->$zd_0004e_33, array($zd_6c877_13, $zd_7d719_14)); $zd_2114f_1->all_recipients[strtolower($zd_6c877_13)] = true; return true; } } else { if (!array_key_exists(strtolower($zd_6c877_13), $zd_2114f_1->ReplyTo)) { $zd_2114f_1->ReplyTo[strtolower($zd_6c877_13)] = array($zd_6c877_13, $zd_7d719_14); return true; } } return false; } public function SetFrom($zd_6c877_13, $zd_7d719_14 = '', $zd_50c3f_76 = 1) { $zd_6c877_13 = trim($zd_6c877_13); $zd_7d719_14 = trim(preg_replace('/[\r\n]+/', '', $zd_7d719_14)); if (!self::ValidateAddress($zd_6c877_13)) { $zd_2114f_1->SetError($zd_2114f_1->Lang('invalid_address').': '. $zd_6c877_13); if ($zd_2114f_1->exceptions) { throw new phpmailerException($zd_2114f_1->Lang('invalid_address').': '.$zd_6c877_13); } if ($zd_2114f_1->SMTPDebug) { echo $zd_2114f_1->Lang('invalid_address').': '.$zd_6c877_13; } return false; } $zd_2114f_1->From = $zd_6c877_13; $zd_2114f_1->FromName = $zd_7d719_14; if ($zd_50c3f_76) { if (empty($zd_2114f_1->ReplyTo)) { $zd_2114f_1->AddAnAddress('Reply-To', $zd_6c877_13, $zd_7d719_14); } if (empty($zd_2114f_1->Sender)) { $zd_2114f_1->Sender = $zd_6c877_13; } } return true; } public static function ValidateAddress($zd_6c877_13) { if (function_exists('filter_var')) { if(filter_var($zd_6c877_13, FILTER_VALIDATE_EMAIL) === FALSE) { return false; } else { return true; } } else { return preg_match('/^(?:[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+\.)*[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+@(?:(?:(?:[a-zA-Z0-9_](?:[a-zA-Z0-9_\-](?!\.)){0,61}[a-zA-Z0-9_-]?\.)+[a-zA-Z0-9_](?:[a-zA-Z0-9_\-](?!$)){0,61}[a-zA-Z0-9_]?)|(?:\[(?:(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\]))$/', $zd_6c877_13); } } public function Send() { try { if(!$zd_2114f_1->PreSend()) return false; return $zd_2114f_1->PostSend(); } catch (phpmailerException $zd_88809_108) { $zd_2114f_1->SentMIMEMessage = ''; $zd_2114f_1->SetError($zd_88809_108->getMessage()); if ($zd_2114f_1->exceptions) { throw $zd_88809_108; } return false; } } protected function PreSend() { try { $zd_33621_114 = ""; if ((count($zd_2114f_1->to) + count($zd_2114f_1->cc) + count($zd_2114f_1->bcc)) < 1) { throw new phpmailerException($zd_2114f_1->Lang('provide_address'), self::STOP_CRITICAL); } if(!empty($zd_2114f_1->AltBody)) { $zd_2114f_1->ContentType = 'multipart/alternative'; } $zd_2114f_1->error_count = 0; $zd_2114f_1->SetMessageType(); if (empty($zd_2114f_1->Body)) { throw new phpmailerException($zd_2114f_1->Lang('empty_message'), self::STOP_CRITICAL); } $zd_2114f_1->MIMEHeader = $zd_2114f_1->CreateHeader(); $zd_2114f_1->MIMEBody = $zd_2114f_1->CreateBody(); if ($zd_2114f_1->Mailer == 'mail') { if (count($zd_2114f_1->to) > 0) { $zd_33621_114 .= $zd_2114f_1->AddrAppend("To", $zd_2114f_1->to); } else { $zd_33621_114 .= $zd_2114f_1->HeaderLine("To", "undisclosed-recipients:;"); } $zd_33621_114 .= $zd_2114f_1->HeaderLine('Subject', $zd_2114f_1->EncodeHeader($zd_2114f_1->SecureHeader(trim($zd_2114f_1->Subject)), 'text', 1)); } if ($zd_2114f_1->DKIM_domain && $zd_2114f_1->DKIM_private) { $zd_72c65_143 = $zd_2114f_1->DKIM_Add($zd_2114f_1->MIMEHeader, $zd_2114f_1->EncodeHeader($zd_2114f_1->SecureHeader($zd_2114f_1->Subject), 'text', 1), $zd_2114f_1->MIMEBody); $zd_2114f_1->MIMEHeader = str_replace("\r\n", "\n", $zd_72c65_143) . $zd_2114f_1->MIMEHeader; } $zd_2114f_1->SentMIMEMessage = sprintf("%s%s\r\n\r\n%s",$zd_2114f_1->MIMEHeader,$zd_33621_114,$zd_2114f_1->MIMEBody); return true; } catch (phpmailerException $zd_88809_108) { $zd_2114f_1->SetError($zd_88809_108->getMessage()); if ($zd_2114f_1->exceptions) { throw $zd_88809_108; } return false; } } protected function PostSend() { try { switch($zd_2114f_1->Mailer) { case 'sendmail': return $zd_2114f_1->SendmailSend($zd_2114f_1->MIMEHeader, $zd_2114f_1->MIMEBody); case 'smtp': return $zd_2114f_1->SmtpSend($zd_2114f_1->MIMEHeader, $zd_2114f_1->MIMEBody); case 'mail': return $zd_2114f_1->MailSend($zd_2114f_1->MIMEHeader, $zd_2114f_1->MIMEBody); default: return $zd_2114f_1->MailSend($zd_2114f_1->MIMEHeader, $zd_2114f_1->MIMEBody); } } catch (phpmailerException $zd_88809_108) { $zd_2114f_1->SetError($zd_88809_108->getMessage()); if ($zd_2114f_1->exceptions) { throw $zd_88809_108; } if ($zd_2114f_1->SMTPDebug) { echo $zd_88809_108->getMessage()."\n"; } return false; } } protected function SendmailSend($zd_f2570_182, $zd_340dc_183) { if ($zd_2114f_1->Sender != '') { $zd_afc3a_185 = sprintf("%s -oi -f %s -t", escapeshellcmd($zd_2114f_1->Sendmail), escapeshellarg($zd_2114f_1->Sender)); } else { $zd_afc3a_185 = sprintf("%s -oi -t", escapeshellcmd($zd_2114f_1->Sendmail)); } if ($zd_2114f_1->SingleTo === true) { foreach ($zd_2114f_1->SingleToArray as $zd_cc5f5_192 => $zd_0339c_193) { if(!@$zd_a2784_194 = popen($zd_afc3a_185, 'w')) { throw new phpmailerException($zd_2114f_1->Lang('execute') . $zd_2114f_1->Sendmail, self::STOP_CRITICAL); } fputs($zd_a2784_194, "To: " . $zd_0339c_193 . "\n"); fputs($zd_a2784_194, $zd_f2570_182); fputs($zd_a2784_194, $zd_340dc_183); $zd_df5a3_204 = pclose($zd_a2784_194); $zd_e6373_206 = ($zd_df5a3_204 == 0) ? 1 : 0; $zd_2114f_1->doCallback($zd_e6373_206, $zd_0339c_193, $zd_2114f_1->cc, $zd_2114f_1->bcc, $zd_2114f_1->Subject, $zd_340dc_183); if($zd_df5a3_204 != 0) { throw new phpmailerException($zd_2114f_1->Lang('execute') . $zd_2114f_1->Sendmail, self::STOP_CRITICAL); } } } else { if(!@$zd_a2784_194 = popen($zd_afc3a_185, 'w')) { throw new phpmailerException($zd_2114f_1->Lang('execute') . $zd_2114f_1->Sendmail, self::STOP_CRITICAL); } fputs($zd_a2784_194, $zd_f2570_182); fputs($zd_a2784_194, $zd_340dc_183); $zd_df5a3_204 = pclose($zd_a2784_194); $zd_e6373_206 = ($zd_df5a3_204 == 0) ? 1 : 0; $zd_2114f_1->doCallback($zd_e6373_206, $zd_2114f_1->to, $zd_2114f_1->cc, $zd_2114f_1->bcc, $zd_2114f_1->Subject, $zd_340dc_183); if($zd_df5a3_204 != 0) { throw new phpmailerException($zd_2114f_1->Lang('execute') . $zd_2114f_1->Sendmail, self::STOP_CRITICAL); } } return true; } protected function MailSend($zd_f2570_182, $zd_340dc_183) { $zd_476f6_242 = array(); foreach($zd_2114f_1->to as $zd_b7a90_244) { $zd_476f6_242[] = $zd_2114f_1->AddrFormat($zd_b7a90_244); } $zd_6047e_248 = implode(', ', $zd_476f6_242); if (empty($zd_2114f_1->Sender)) { $zd_991fc_251 = "-oi "; } else { $zd_991fc_251 = sprintf("-oi -f %s", $zd_2114f_1->Sender); } if ($zd_2114f_1->Sender != '' and !ini_get('safe_mode')) { $zd_c6a75_255 = ini_get('sendmail_from'); ini_set('sendmail_from', $zd_2114f_1->Sender); if ($zd_2114f_1->SingleTo === true && count($zd_476f6_242) > 1) { foreach ($zd_476f6_242 as $zd_cc5f5_192 => $zd_0339c_193) { $zd_b5656_262 = @mail($zd_0339c_193, $zd_2114f_1->EncodeHeader($zd_2114f_1->SecureHeader($zd_2114f_1->Subject), 'text', 1), $zd_340dc_183, $zd_f2570_182, $zd_991fc_251); $zd_e6373_206 = ($zd_b5656_262 == 1) ? 1 : 0; $zd_2114f_1->doCallback($zd_e6373_206, $zd_0339c_193, $zd_2114f_1->cc, $zd_2114f_1->bcc, $zd_2114f_1->Subject, $zd_340dc_183); } } else { $zd_b5656_262 = @mail($zd_6047e_248, $zd_2114f_1->EncodeHeader($zd_2114f_1->SecureHeader($zd_2114f_1->Subject), 'text', 1), $zd_340dc_183, $zd_f2570_182, $zd_991fc_251); $zd_e6373_206 = ($zd_b5656_262 == 1) ? 1 : 0; $zd_2114f_1->doCallback($zd_e6373_206, $zd_6047e_248, $zd_2114f_1->cc, $zd_2114f_1->bcc, $zd_2114f_1->Subject, $zd_340dc_183); } } else { if ($zd_2114f_1->SingleTo === true && count($zd_476f6_242) > 1) { foreach ($zd_476f6_242 as $zd_cc5f5_192 => $zd_0339c_193) { $zd_b5656_262 = @mail($zd_0339c_193, $zd_2114f_1->EncodeHeader($zd_2114f_1->SecureHeader($zd_2114f_1->Subject), 'text', 1), $zd_340dc_183, $zd_f2570_182, $zd_991fc_251); $zd_e6373_206 = ($zd_b5656_262 == 1) ? 1 : 0; $zd_2114f_1->doCallback($zd_e6373_206, $zd_0339c_193, $zd_2114f_1->cc, $zd_2114f_1->bcc, $zd_2114f_1->Subject, $zd_340dc_183); } } else { $zd_b5656_262 = @mail($zd_6047e_248, $zd_2114f_1->EncodeHeader($zd_2114f_1->SecureHeader($zd_2114f_1->Subject), 'text', 1), $zd_340dc_183, $zd_f2570_182, $zd_991fc_251); $zd_e6373_206 = ($zd_b5656_262 == 1) ? 1 : 0; $zd_2114f_1->doCallback($zd_e6373_206, $zd_6047e_248, $zd_2114f_1->cc, $zd_2114f_1->bcc, $zd_2114f_1->Subject, $zd_340dc_183); } } if (isset($zd_c6a75_255)) { ini_set('sendmail_from', $zd_c6a75_255); } if(!$zd_b5656_262) { throw new phpmailerException($zd_2114f_1->Lang('instantiate'), self::STOP_CRITICAL); } return true; } protected function SmtpSend($zd_f2570_182, $zd_340dc_183) { $zd_09597_341 = array(); if(!$zd_2114f_1->SmtpConnect()) { throw new phpmailerException($zd_2114f_1->Lang('smtp_connect_failed'), self::STOP_CRITICAL); } $zd_10357_344 = ($zd_2114f_1->Sender == '') ? $zd_2114f_1->From : $zd_2114f_1->Sender; if(!$zd_2114f_1->smtp->Mail($zd_10357_344)) { throw new phpmailerException($zd_2114f_1->Lang('from_failed') . $zd_10357_344, self::STOP_CRITICAL); } foreach($zd_2114f_1->to as $zd_6047e_248) { if (!$zd_2114f_1->smtp->Recipient($zd_6047e_248[0])) { $zd_09597_341[] = $zd_6047e_248[0]; $zd_e6373_206 = 0; $zd_2114f_1->doCallback($zd_e6373_206, $zd_6047e_248[0], '', '', $zd_2114f_1->Subject, $zd_340dc_183); } else { $zd_e6373_206 = 1; $zd_2114f_1->doCallback($zd_e6373_206, $zd_6047e_248[0], '', '', $zd_2114f_1->Subject, $zd_340dc_183); } } foreach($zd_2114f_1->cc as $zd_3e1eb_371) { if (!$zd_2114f_1->smtp->Recipient($zd_3e1eb_371[0])) { $zd_09597_341[] = $zd_3e1eb_371[0]; $zd_e6373_206 = 0; $zd_2114f_1->doCallback($zd_e6373_206, '', $zd_3e1eb_371[0], '', $zd_2114f_1->Subject, $zd_340dc_183); } else { $zd_e6373_206 = 1; $zd_2114f_1->doCallback($zd_e6373_206, '', $zd_3e1eb_371[0], '', $zd_2114f_1->Subject, $zd_340dc_183); } } foreach($zd_2114f_1->bcc as $zd_6ae80_389) { if (!$zd_2114f_1->smtp->Recipient($zd_6ae80_389[0])) { $zd_09597_341[] = $zd_6ae80_389[0]; $zd_e6373_206 = 0; $zd_2114f_1->doCallback($zd_e6373_206, '', '', $zd_6ae80_389[0], $zd_2114f_1->Subject, $zd_340dc_183); } else { $zd_e6373_206 = 1; $zd_2114f_1->doCallback($zd_e6373_206, '', '', $zd_6ae80_389[0], $zd_2114f_1->Subject, $zd_340dc_183); } } if (count($zd_09597_341) > 0 ) { $zd_06808_407 = implode(', ', $zd_09597_341); throw new phpmailerException($zd_2114f_1->Lang('recipients_failed') . $zd_06808_407); } if(!$zd_2114f_1->smtp->Data($zd_f2570_182 . $zd_340dc_183)) { throw new phpmailerException($zd_2114f_1->Lang('data_not_accepted'), self::STOP_CRITICAL); } if($zd_2114f_1->SMTPKeepAlive == true) { $zd_2114f_1->smtp->Reset(); } return true; } public function SmtpConnect() { if(is_null($zd_2114f_1->smtp)) { $zd_2114f_1->smtp = new SMTP(); } $zd_2114f_1->smtp->do_debug = $zd_2114f_1->SMTPDebug; $zd_15bff_421 = explode(';', $zd_2114f_1->Host); $zd_859a8_423 = 0; $zd_5452d_424 = $zd_2114f_1->smtp->Connected(); try { while($zd_859a8_423 < count($zd_15bff_421) && !$zd_5452d_424) { $zd_678d6_429 = array(); if (preg_match('/^(.+):([0-9]+)$/', $zd_15bff_421[$zd_859a8_423], $zd_678d6_429)) { $zd_eef21_433 = $zd_678d6_429[1]; $zd_7c27b_435 = $zd_678d6_429[2]; } else { $zd_eef21_433 = $zd_15bff_421[$zd_859a8_423]; $zd_7c27b_435 = $zd_2114f_1->Port; } $zd_a8107_442 = ($zd_2114f_1->SMTPSecure == 'tls'); $zd_7b94b_444 = ($zd_2114f_1->SMTPSecure == 'ssl'); if ($zd_2114f_1->smtp->Connect(($zd_7b94b_444 ? 'ssl://':'').$zd_eef21_433, $zd_7c27b_435, $zd_2114f_1->Timeout)) { $zd_59ee2_451 = ($zd_2114f_1->Helo != '' ? $zd_2114f_1->Helo : $zd_2114f_1->ServerHostname()); $zd_2114f_1->smtp->Hello($zd_59ee2_451); if ($zd_a8107_442) { if (!$zd_2114f_1->smtp->StartTLS()) { throw new phpmailerException($zd_2114f_1->Lang('tls')); } $zd_2114f_1->smtp->Hello($zd_59ee2_451); } $zd_5452d_424 = true; if ($zd_2114f_1->SMTPAuth) { if (!$zd_2114f_1->smtp->Authenticate($zd_2114f_1->Username, $zd_2114f_1->Password)) { throw new phpmailerException($zd_2114f_1->Lang('authenticate')); } } } $zd_859a8_423++; if (!$zd_5452d_424) { throw new phpmailerException($zd_2114f_1->Lang('connect_host')); } } } catch (phpmailerException $zd_88809_108) { $zd_2114f_1->smtp->Reset(); if ($zd_2114f_1->exceptions) { throw $zd_88809_108; } } return true; } public function SmtpClose() { if(!is_null($zd_2114f_1->smtp)) { if($zd_2114f_1->smtp->Connected()) { $zd_2114f_1->smtp->Quit(); $zd_2114f_1->smtp->Close(); } } } function SetLanguage($zd_3c71d_0 = 'en', $zd_d35c6_1 = 'language/') { $zd_45d98_2 = array( 'provide_address' => 'You must provide at least one recipient email address.', 'mailer_not_supported' => ' mailer is not supported.', 'execute' => 'Could not execute: ', 'instantiate' => 'Could not instantiate mail function.', 'authenticate' => 'SMTP Error: Could not authenticate.', 'from_failed' => 'The following From address failed: ', 'recipients_failed' => 'SMTP Error: The following recipients failed: ', 'data_not_accepted' => 'SMTP Error: Data not accepted.', 'connect_host' => 'SMTP Error: Could not connect to SMTP host.', 'file_access' => 'Could not access file: ', 'file_open' => 'File Error: Could not open file: ', 'encoding' => 'Unknown encoding: ', 'signing' => 'Signing Error: ', 'smtp_error' => 'SMTP server error: ', 'empty_message' => 'Message body empty', 'invalid_address' => 'Invalid address', 'variable_set' => 'Cannot set or reset variable: ' ); $zd_ce8ae_3 = true; if ($zd_3c71d_0 != 'en') { $zd_ce8ae_3 = @include $zd_d35c6_1.'phpmailer.lang-'.$zd_3c71d_0.'.php'; } $zd_67e0a_8->language = $zd_45d98_2; return ($zd_ce8ae_3 == true); } public function GetTranslations() { return $zd_67e0a_8->language; } public function AddrAppend($zd_51bd2_12, $zd_59e9a_13) { $zd_8df6b_14 = $zd_51bd2_12 . ': '; $zd_94a37_16 = array(); foreach ($zd_59e9a_13 as $zd_60c26_18) { $zd_94a37_16[] = $zd_67e0a_8->AddrFormat($zd_60c26_18); } $zd_8df6b_14 .= implode(', ', $zd_94a37_16); $zd_8df6b_14 .= $zd_67e0a_8->LE; return $zd_8df6b_14; } public function AddrFormat($zd_59e9a_13) { if (empty($zd_59e9a_13[1])) { return $zd_67e0a_8->SecureHeader($zd_59e9a_13[0]); } else { return $zd_67e0a_8->EncodeHeader($zd_67e0a_8->SecureHeader($zd_59e9a_13[1]), 'phrase') . " <" . $zd_67e0a_8->SecureHeader($zd_59e9a_13[0]) . ">"; } } public function WrapText($zd_c3783_36, $zd_76979_37, $zd_4325e_38 = false) { $zd_ae3b9_39 = ($zd_4325e_38) ? sprintf(" =%s", $zd_67e0a_8->LE) : $zd_67e0a_8->LE; $zd_085dc_43 = (strtolower($zd_67e0a_8->CharSet) == "utf-8"); $zd_c3783_36 = $zd_67e0a_8->FixEOL($zd_c3783_36); if (substr($zd_c3783_36, -1) == $zd_67e0a_8->LE) { $zd_c3783_36 = substr($zd_c3783_36, 0, -1); } $zd_5aae4_52 = explode($zd_67e0a_8->LE, $zd_c3783_36); $zd_c3783_36 = ''; for ($zd_6a549_56 = 0 ;$zd_6a549_56 < count($zd_5aae4_52); $zd_6a549_56++) { $zd_9d080_60 = explode(' ', $zd_5aae4_52[$zd_6a549_56]); $zd_cffeb_63 = ''; for ($zd_fd4e3_64 = 0; $zd_fd4e3_64<count($zd_9d080_60); $zd_fd4e3_64++) { $zd_036cb_68 = $zd_9d080_60[$zd_fd4e3_64]; if ($zd_4325e_38 and (strlen($zd_036cb_68) > $zd_76979_37)) { $zd_6ac48_74 = $zd_76979_37 - strlen($zd_cffeb_63) - 1; if ($zd_fd4e3_64 != 0) { if ($zd_6ac48_74 > 20) { $zd_ff3c5_79 = $zd_6ac48_74; if ($zd_085dc_43) { $zd_ff3c5_79 = $zd_67e0a_8->UTF8CharBoundary($zd_036cb_68, $zd_ff3c5_79); } elseif (substr($zd_036cb_68, $zd_ff3c5_79 - 1, 1) == "=") { $zd_ff3c5_79--; } elseif (substr($zd_036cb_68, $zd_ff3c5_79 - 2, 1) == "=") { $zd_ff3c5_79 -= 2; } $zd_5a563_92 = substr($zd_036cb_68, 0, $zd_ff3c5_79); $zd_036cb_68 = substr($zd_036cb_68, $zd_ff3c5_79); $zd_cffeb_63 .= ' ' . $zd_5a563_92; $zd_c3783_36 .= $zd_cffeb_63 . sprintf("=%s", $zd_67e0a_8->LE); } else { $zd_c3783_36 .= $zd_cffeb_63 . $zd_ae3b9_39; } $zd_cffeb_63 = ''; } while (strlen($zd_036cb_68) > 0) { $zd_ff3c5_79 = $zd_76979_37; if ($zd_085dc_43) { $zd_ff3c5_79 = $zd_67e0a_8->UTF8CharBoundary($zd_036cb_68, $zd_ff3c5_79); } elseif (substr($zd_036cb_68, $zd_ff3c5_79 - 1, 1) == "=") { $zd_ff3c5_79--; } elseif (substr($zd_036cb_68, $zd_ff3c5_79 - 2, 1) == "=") { $zd_ff3c5_79 -= 2; } $zd_5a563_92 = substr($zd_036cb_68, 0, $zd_ff3c5_79); $zd_036cb_68 = substr($zd_036cb_68, $zd_ff3c5_79); if (strlen($zd_036cb_68) > 0) { $zd_c3783_36 .= $zd_5a563_92 . sprintf("=%s", $zd_67e0a_8->LE); } else { $zd_cffeb_63 = $zd_5a563_92; } } } else { $zd_04d89_133 = $zd_cffeb_63; $zd_cffeb_63 .= ($zd_fd4e3_64 == 0) ? $zd_036cb_68 : (' ' . $zd_036cb_68); if (strlen($zd_cffeb_63) > $zd_76979_37 and $zd_04d89_133 != '') { $zd_c3783_36 .= $zd_04d89_133 . $zd_ae3b9_39; $zd_cffeb_63 = $zd_036cb_68; } } } $zd_c3783_36 .= $zd_cffeb_63 . $zd_67e0a_8->LE; } return $zd_c3783_36; } public function UTF8CharBoundary($zd_5c6b6_151, $zd_e0bfb_152) { $zd_82471_153 = false; $zd_19afd_154 = 3; while (!$zd_82471_153) { $zd_5bd3e_156 = substr($zd_5c6b6_151, $zd_e0bfb_152 - $zd_19afd_154, $zd_19afd_154); $zd_ed005_161 = strpos($zd_5bd3e_156, "="); if ($zd_ed005_161 !== false) { $zd_98893_164 = substr($zd_5c6b6_151, $zd_e0bfb_152 - $zd_19afd_154 + $zd_ed005_161 + 1, 2); $zd_0f47d_169 = hexdec($zd_98893_164); if ($zd_0f47d_169 < 128) { $zd_e0bfb_152 = ($zd_ed005_161 == 0) ? $zd_e0bfb_152 : $zd_e0bfb_152 - ($zd_19afd_154 - $zd_ed005_161); $zd_82471_153 = true; } elseif ($zd_0f47d_169 >= 192) { $zd_e0bfb_152 = $zd_e0bfb_152 - ($zd_19afd_154 - $zd_ed005_161); $zd_82471_153 = true; } elseif ($zd_0f47d_169 < 192) { $zd_19afd_154 += 3; } } else { $zd_82471_153 = true; } } return $zd_e0bfb_152; } public function SetWordWrap() { if($zd_67e0a_8->WordWrap < 1) { return; } switch($zd_67e0a_8->message_type) { case 'alt': case 'alt_inline': case 'alt_attach': case 'alt_inline_attach': $zd_67e0a_8->AltBody = $zd_67e0a_8->WrapText($zd_67e0a_8->AltBody, $zd_67e0a_8->WordWrap); break; default: $zd_67e0a_8->Body = $zd_67e0a_8->WrapText($zd_67e0a_8->Body, $zd_67e0a_8->WordWrap); break; } } public function CreateHeader() { $zd_375c4_199 = ''; $zd_38576_200 = md5(uniqid(time())); $zd_67e0a_8->boundary[1] = 'b1_' . $zd_38576_200; $zd_67e0a_8->boundary[2] = 'b2_' . $zd_38576_200; $zd_67e0a_8->boundary[3] = 'b3_' . $zd_38576_200; $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Date', self::RFCDate()); if($zd_67e0a_8->Sender == '') { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Return-Path', trim($zd_67e0a_8->From)); } else { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Return-Path', trim($zd_67e0a_8->Sender)); } if($zd_67e0a_8->Mailer != 'mail') { if ($zd_67e0a_8->SingleTo === true) { foreach($zd_67e0a_8->to as $zd_a6f5d_219) { $zd_67e0a_8->SingleToArray[] = $zd_67e0a_8->AddrFormat($zd_a6f5d_219); } } else { if(count($zd_67e0a_8->to) > 0) { $zd_375c4_199 .= $zd_67e0a_8->AddrAppend('To', $zd_67e0a_8->to); } elseif (count($zd_67e0a_8->cc) == 0) { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('To', 'undisclosed-recipients:;'); } } } $zd_43de3_230 = array(); $zd_43de3_230[0][0] = trim($zd_67e0a_8->From); $zd_43de3_230[0][1] = $zd_67e0a_8->FromName; $zd_375c4_199 .= $zd_67e0a_8->AddrAppend('From', $zd_43de3_230); if(count($zd_67e0a_8->cc) > 0) { $zd_375c4_199 .= $zd_67e0a_8->AddrAppend('Cc', $zd_67e0a_8->cc); } if((($zd_67e0a_8->Mailer == 'sendmail') || ($zd_67e0a_8->Mailer == 'mail')) && (count($zd_67e0a_8->bcc) > 0)) { $zd_375c4_199 .= $zd_67e0a_8->AddrAppend('Bcc', $zd_67e0a_8->bcc); } if(count($zd_67e0a_8->ReplyTo) > 0) { $zd_375c4_199 .= $zd_67e0a_8->AddrAppend('Reply-To', $zd_67e0a_8->ReplyTo); } if($zd_67e0a_8->Mailer != 'mail') { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Subject', $zd_67e0a_8->EncodeHeader($zd_67e0a_8->SecureHeader($zd_67e0a_8->Subject), 'text', 1)); } if($zd_67e0a_8->MessageID != '') { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Message-ID', $zd_67e0a_8->MessageID); } else { $zd_375c4_199 .= sprintf("Message-ID: <%s@%s>%s", $zd_38576_200, $zd_67e0a_8->ServerHostname(), $zd_67e0a_8->LE); } $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('X-Priority', $zd_67e0a_8->Priority); if($zd_67e0a_8->XMailer) { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('X-Mailer', $zd_67e0a_8->XMailer); } else { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('X-Mailer', 'PHPMailer '.$zd_67e0a_8->Version.' (http://code.google.com/a/apache-extras.org/p/phpmailer/)'); } if($zd_67e0a_8->ConfirmReadingTo != '') { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Disposition-Notification-To', '<' . trim($zd_67e0a_8->ConfirmReadingTo) . '>'); } for($zd_a1e7b_280 = 0; $zd_a1e7b_280 < count($zd_67e0a_8->CustomHeader); $zd_a1e7b_280++) { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine(trim($zd_67e0a_8->CustomHeader[$zd_a1e7b_280][0]), $zd_67e0a_8->EncodeHeader(trim($zd_67e0a_8->CustomHeader[$zd_a1e7b_280][1]), 'text', 1)); } if (!$zd_67e0a_8->sign_key_file) { $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('MIME-Version', '1.0'); $zd_375c4_199 .= $zd_67e0a_8->GetMailMIME(); } return $zd_375c4_199; } public function GetMailMIME() { $zd_375c4_199 = ''; switch($zd_67e0a_8->message_type) { case 'plain': $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Content-Transfer-Encoding', $zd_67e0a_8->Encoding); $zd_375c4_199 .= $zd_67e0a_8->TextLine('Content-Type: '.$zd_67e0a_8->ContentType.'; charset="'.$zd_67e0a_8->CharSet.'"'); break; case 'inline': $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Content-Type', 'multipart/related;'); $zd_375c4_199 .= $zd_67e0a_8->TextLine("\tboundary=\"" . $zd_67e0a_8->boundary[1] . '"'); break; case 'attach': case 'inline_attach': case 'alt_attach': case 'alt_inline_attach': $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Content-Type', 'multipart/mixed;'); $zd_375c4_199 .= $zd_67e0a_8->TextLine("\tboundary=\"" . $zd_67e0a_8->boundary[1] . '"'); break; case 'alt': case 'alt_inline': $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Content-Type', 'multipart/alternative;'); $zd_375c4_199 .= $zd_67e0a_8->TextLine("\tboundary=\"" . $zd_67e0a_8->boundary[1] . '"'); break; } if($zd_67e0a_8->Mailer != 'mail') { $zd_375c4_199 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; } return $zd_375c4_199; } public function GetSentMIMEMessage() { return $zd_67e0a_8->SentMIMEMessage; } public function CreateBody() { $zd_bcb81_327 = ''; if ($zd_67e0a_8->sign_key_file) { $zd_bcb81_327 .= $zd_67e0a_8->GetMailMIME(); } $zd_67e0a_8->SetWordWrap(); switch($zd_67e0a_8->message_type) { case 'plain': $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->Body, $zd_67e0a_8->Encoding); break; case 'inline': $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[1], '', '', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->Body, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->AttachAll("inline", $zd_67e0a_8->boundary[1]); break; case 'attach': $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[1], '', '', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->Body, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->AttachAll("attachment", $zd_67e0a_8->boundary[1]); break; case 'inline_attach': $zd_bcb81_327 .= $zd_67e0a_8->TextLine("--" . $zd_67e0a_8->boundary[1]); $zd_bcb81_327 .= $zd_67e0a_8->HeaderLine('Content-Type', 'multipart/related;'); $zd_bcb81_327 .= $zd_67e0a_8->TextLine("\tboundary=\"" . $zd_67e0a_8->boundary[2] . '"'); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[2], '', '', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->Body, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->AttachAll("inline", $zd_67e0a_8->boundary[2]); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->AttachAll("attachment", $zd_67e0a_8->boundary[1]); break; case 'alt': $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[1], '', 'text/plain', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->AltBody, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[1], '', 'text/html', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->Body, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->EndBoundary($zd_67e0a_8->boundary[1]); break; case 'alt_inline': $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[1], '', 'text/plain', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->AltBody, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->TextLine("--" . $zd_67e0a_8->boundary[1]); $zd_bcb81_327 .= $zd_67e0a_8->HeaderLine('Content-Type', 'multipart/related;'); $zd_bcb81_327 .= $zd_67e0a_8->TextLine("\tboundary=\"" . $zd_67e0a_8->boundary[2] . '"'); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[2], '', 'text/html', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->Body, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->AttachAll("inline", $zd_67e0a_8->boundary[2]); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->EndBoundary($zd_67e0a_8->boundary[1]); break; case 'alt_attach': $zd_bcb81_327 .= $zd_67e0a_8->TextLine("--" . $zd_67e0a_8->boundary[1]); $zd_bcb81_327 .= $zd_67e0a_8->HeaderLine('Content-Type', 'multipart/alternative;'); $zd_bcb81_327 .= $zd_67e0a_8->TextLine("\tboundary=\"" . $zd_67e0a_8->boundary[2] . '"'); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[2], '', 'text/plain', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->AltBody, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[2], '', 'text/html', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->Body, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->EndBoundary($zd_67e0a_8->boundary[2]); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->AttachAll("attachment", $zd_67e0a_8->boundary[1]); break; case 'alt_inline_attach': $zd_bcb81_327 .= $zd_67e0a_8->TextLine("--" . $zd_67e0a_8->boundary[1]); $zd_bcb81_327 .= $zd_67e0a_8->HeaderLine('Content-Type', 'multipart/alternative;'); $zd_bcb81_327 .= $zd_67e0a_8->TextLine("\tboundary=\"" . $zd_67e0a_8->boundary[2] . '"'); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[2], '', 'text/plain', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->AltBody, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->TextLine("--" . $zd_67e0a_8->boundary[2]); $zd_bcb81_327 .= $zd_67e0a_8->HeaderLine('Content-Type', 'multipart/related;'); $zd_bcb81_327 .= $zd_67e0a_8->TextLine("\tboundary=\"" . $zd_67e0a_8->boundary[3] . '"'); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->GetBoundary($zd_67e0a_8->boundary[3], '', 'text/html', ''); $zd_bcb81_327 .= $zd_67e0a_8->EncodeString($zd_67e0a_8->Body, $zd_67e0a_8->Encoding); $zd_bcb81_327 .= $zd_67e0a_8->LE.$zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->AttachAll("inline", $zd_67e0a_8->boundary[3]); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->EndBoundary($zd_67e0a_8->boundary[2]); $zd_bcb81_327 .= $zd_67e0a_8->LE; $zd_bcb81_327 .= $zd_67e0a_8->AttachAll("attachment", $zd_67e0a_8->boundary[1]); break; } if ($zd_67e0a_8->IsError()) { $zd_bcb81_327 = ''; } elseif ($zd_67e0a_8->sign_key_file) { try { $zd_6ffc2_546 = tempnam('', 'mail'); file_put_contents($zd_6ffc2_546, $zd_bcb81_327); $zd_cbd9b_549 = tempnam("", "signed"); if (@openssl_pkcs7_sign($zd_6ffc2_546, $zd_cbd9b_549, "file://".$zd_67e0a_8->sign_cert_file, array("file://".$zd_67e0a_8->sign_key_file, $zd_67e0a_8->sign_key_pass), NULL)) { @unlink($zd_6ffc2_546); $zd_bcb81_327 = file_get_contents($zd_cbd9b_549); @unlink($zd_cbd9b_549); } else { @unlink($zd_6ffc2_546); @unlink($zd_cbd9b_549); throw new phpmailerException($zd_67e0a_8->Lang("signing").openssl_error_string()); } } catch (phpmailerException $zd_fd4e3_64) { $zd_bcb81_327 = ''; if ($zd_67e0a_8->exceptions) { throw $zd_fd4e3_64; } } } return $zd_bcb81_327; } protected function GetBoundary($zd_3c4af_567, $zd_520e7_568, $zd_104fe_569, $zd_b1457_570) { $zd_375c4_199 = ''; if($zd_520e7_568 == '') { $zd_520e7_568 = $zd_67e0a_8->CharSet; } if($zd_104fe_569 == '') { $zd_104fe_569 = $zd_67e0a_8->ContentType; } if($zd_b1457_570 == '') { $zd_b1457_570 = $zd_67e0a_8->Encoding; } $zd_375c4_199 .= $zd_67e0a_8->TextLine('--' . $zd_3c4af_567); $zd_375c4_199 .= sprintf("Content-Type: %s; charset=\"%s\"", $zd_104fe_569, $zd_520e7_568); $zd_375c4_199 .= $zd_67e0a_8->LE; $zd_375c4_199 .= $zd_67e0a_8->HeaderLine('Content-Transfer-Encoding', $zd_b1457_570); $zd_375c4_199 .= $zd_67e0a_8->LE; return $zd_375c4_199; } protected function EndBoundary($zd_3c4af_567) { return $zd_67e0a_8->LE . '--' . $zd_3c4af_567 . '--' . $zd_67e0a_8->LE; } protected function SetMessageType() { $zd_67e0a_8->message_type = array(); if($zd_67e0a_8->AlternativeExists()) $zd_67e0a_8->message_type[] = "alt"; if($zd_67e0a_8->InlineImageExists()) $zd_67e0a_8->message_type[] = "inline"; if($zd_67e0a_8->AttachmentExists()) $zd_67e0a_8->message_type[] = "attach"; $zd_67e0a_8->message_type = implode("_", $zd_67e0a_8->message_type); if($zd_67e0a_8->message_type == "") $zd_67e0a_8->message_type = "plain"; } public function HeaderLine($zd_43d33_610, $zd_1a091_611) { return $zd_43d33_610 . ': ' . $zd_1a091_611 . $zd_67e0a_8->LE; } public function TextLine($zd_1a091_611) { return $zd_1a091_611 . $zd_67e0a_8->LE; } public function AddAttachment($zd_fac17_618, $zd_43d33_610 = '', $zd_b1457_570 = 'base64', $zd_51bd2_12 = 'application/octet-stream') { try { if ( !@is_file($zd_fac17_618) ) { throw new phpmailerException($zd_67e0a_8->Lang('file_access') . $zd_fac17_618, self::STOP_CONTINUE); } $zd_b9bac_625 = basename($zd_fac17_618); if ( $zd_43d33_610 == '' ) { $zd_43d33_610 = $zd_b9bac_625; } $zd_67e0a_8->attachment[] = array( 0 => $zd_fac17_618, 1 => $zd_b9bac_625, 2 => $zd_43d33_610, 3 => $zd_b1457_570, 4 => $zd_51bd2_12, 5 => false, 6 => 'attachment', 7 => 0 ); } catch (phpmailerException $zd_fd4e3_64) { $zd_67e0a_8->SetError($zd_fd4e3_64->getMessage()); if ($zd_67e0a_8->exceptions) { throw $zd_fd4e3_64; } if ($zd_67e0a_8->SMTPDebug) { echo $zd_fd4e3_64->getMessage()."\n"; } if ( $zd_fd4e3_64->getCode() == self::STOP_CRITICAL ) { return false; } } return true; } public function GetAttachments() { return $zd_67e0a_8->attachment; } protected function AttachAll($zd_d1e40_645, $zd_3c4af_567) { $zd_264d0_647 = array(); $zd_755b4_648 = array(); $zd_2f1b2_649 = array(); foreach ($zd_67e0a_8->attachment as $zd_3043b_651) { if($zd_3043b_651[6] == $zd_d1e40_645) { $zd_8d5b3_654 = $zd_3043b_651[5]; if ($zd_8d5b3_654) { $zd_a8e4f_657 = $zd_3043b_651[0]; } else { $zd_fac17_618 = $zd_3043b_651[0]; } $zd_4b206_661 = md5(serialize($zd_3043b_651)); if (in_array($zd_4b206_661, $zd_2f1b2_649)) { continue; } $zd_2f1b2_649[] = $zd_4b206_661; $zd_b9bac_625 = $zd_3043b_651[1]; $zd_43d33_610 = $zd_3043b_651[2]; $zd_b1457_570 = $zd_3043b_651[3]; $zd_51bd2_12 = $zd_3043b_651[4]; $zd_bed8b_675 = $zd_3043b_651[6]; $zd_f843b_677 = $zd_3043b_651[7]; if ( $zd_bed8b_675 == 'inline' && isset($zd_755b4_648[$zd_f843b_677]) ) { continue; } $zd_755b4_648[$zd_f843b_677] = true; $zd_264d0_647[] = sprintf("--%s%s", $zd_3c4af_567, $zd_67e0a_8->LE); $zd_264d0_647[] = sprintf("Content-Type: %s; name=\"%s\"%s", $zd_51bd2_12, $zd_67e0a_8->EncodeHeader($zd_67e0a_8->SecureHeader($zd_43d33_610)), $zd_67e0a_8->LE); $zd_264d0_647[] = sprintf("Content-Transfer-Encoding: %s%s", $zd_b1457_570, $zd_67e0a_8->LE); if($zd_bed8b_675 == 'inline') { $zd_264d0_647[] = sprintf("Content-ID: <%s>%s", $zd_f843b_677, $zd_67e0a_8->LE); } $zd_264d0_647[] = sprintf("Content-Disposition: %s; filename=\"%s\"%s", $zd_bed8b_675, $zd_67e0a_8->EncodeHeader($zd_67e0a_8->SecureHeader($zd_43d33_610)), $zd_67e0a_8->LE.$zd_67e0a_8->LE); if($zd_8d5b3_654) { $zd_264d0_647[] = $zd_67e0a_8->EncodeString($zd_a8e4f_657, $zd_b1457_570); if($zd_67e0a_8->IsError()) { return ''; } $zd_264d0_647[] = $zd_67e0a_8->LE.$zd_67e0a_8->LE; } else { $zd_264d0_647[] = $zd_67e0a_8->EncodeFile($zd_fac17_618, $zd_b1457_570); if($zd_67e0a_8->IsError()) { return ''; } $zd_264d0_647[] = $zd_67e0a_8->LE.$zd_67e0a_8->LE; } } } $zd_264d0_647[] = sprintf("--%s--%s", $zd_3c4af_567, $zd_67e0a_8->LE); return implode("", $zd_264d0_647); } protected function EncodeFile($zd_fac17_618, $zd_b1457_570 = 'base64') { try { if (!is_readable($zd_fac17_618)) { throw new phpmailerException($zd_67e0a_8->Lang('file_open') . $zd_fac17_618, self::STOP_CONTINUE); } if (function_exists('get_magic_quotes')) { function get_magic_quotes() { return false; } } $zd_1d745_733 = get_magic_quotes_runtime(); if ($zd_1d745_733) { if (version_compare(PHP_VERSION, '5.3.0', '<')) { set_magic_quotes_runtime(0); } else { ini_set('magic_quotes_runtime', 0); } } $zd_c8567_735 = file_get_contents($zd_fac17_618); $zd_c8567_735 = $zd_67e0a_8->EncodeString($zd_c8567_735, $zd_b1457_570); if ($zd_1d745_733) { if (version_compare(PHP_VERSION, '5.3.0', '<')) { set_magic_quotes_runtime($zd_1d745_733); } else { ini_set('magic_quotes_runtime', $zd_1d745_733); } } return $zd_c8567_735; } catch (Exception $zd_fd4e3_64) { $zd_67e0a_8->SetError($zd_fd4e3_64->getMessage()); return ''; } } public function EncodeString($zd_4fb0c_748, $zd_b1457_570 = 'base64') { $zd_1011a_750 = ''; switch(strtolower($zd_b1457_570)) { case 'base64': $zd_1011a_750 = chunk_split(base64_encode($zd_4fb0c_748), 76, $zd_67e0a_8->LE); break; case '7bit': case '8bit': $zd_1011a_750 = $zd_67e0a_8->FixEOL($zd_4fb0c_748); if (substr($zd_1011a_750, -(strlen($zd_67e0a_8->LE))) != $zd_67e0a_8->LE) $zd_1011a_750 .= $zd_67e0a_8->LE; break; case 'binary': $zd_1011a_750 = $zd_4fb0c_748; break; case 'quoted-printable': $zd_1011a_750 = $zd_67e0a_8->EncodeQP($zd_4fb0c_748); break; default: $zd_67e0a_8->SetError($zd_67e0a_8->Lang('encoding') . $zd_b1457_570); break; } return $zd_1011a_750; } public function EncodeHeader($zd_4fb0c_748, $zd_0b6c6_773 = 'text', $zd_e222f_774 = 0) { $zd_f68aa_775 = 0; switch (strtolower($zd_0b6c6_773)) { case 'phrase': if (!preg_match('/[\200-\377]/', $zd_4fb0c_748)) { $zd_1011a_750 = addcslashes($zd_4fb0c_748, "\0..\37\177\\\""); if (($zd_4fb0c_748 == $zd_1011a_750) && !preg_match('/[^A-Za-z0-9!#$%&\'*+\/=?^_`{|}~ -]/', $zd_4fb0c_748)) { return ($zd_1011a_750); } else { return ("\"$zd_1011a_750\""); } } $zd_f68aa_775 = preg_match_all('/[^\040\041\043-\133\135-\176]/', $zd_4fb0c_748, $zd_e4ce2_787); break; case 'comment': $zd_f68aa_775 = preg_match_all('/[()"]/', $zd_4fb0c_748, $zd_e4ce2_787); case 'text': default: $zd_f68aa_775 += preg_match_all('/[\000-\010\013\014\016-\037\177-\377]/', $zd_4fb0c_748, $zd_e4ce2_787); break; } if ($zd_f68aa_775 == 0) { return ($zd_4fb0c_748); } $zd_2b2fe_796 = 75 - 7 - strlen($zd_67e0a_8->CharSet); if (strlen($zd_4fb0c_748)/3 < $zd_f68aa_775) { $zd_b1457_570 = 'B'; if (function_exists('mb_strlen') && $zd_67e0a_8->HasMultiBytes($zd_4fb0c_748)) { $zd_1011a_750 = $zd_67e0a_8->Base64EncodeWrapMB($zd_4fb0c_748); } else { $zd_1011a_750 = base64_encode($zd_4fb0c_748); $zd_2b2fe_796 -= $zd_2b2fe_796 % 4; $zd_1011a_750 = trim(chunk_split($zd_1011a_750, $zd_2b2fe_796, "\n")); } } else { $zd_b1457_570 = 'Q'; $zd_1011a_750 = $zd_67e0a_8->EncodeQ($zd_4fb0c_748, $zd_0b6c6_773); $zd_1011a_750 = $zd_67e0a_8->WrapText($zd_1011a_750, $zd_2b2fe_796, true); $zd_1011a_750 = str_replace('='.$zd_67e0a_8->LE, "\n", trim($zd_1011a_750)); } $zd_1011a_750 = preg_replace('/^(.*)$/m', " =?".$zd_67e0a_8->CharSet."?$zd_b1457_570?\\1?=", $zd_1011a_750); $zd_1011a_750 = trim(str_replace("\n", $zd_67e0a_8->LE, $zd_1011a_750)); return $zd_1011a_750; } public function HasMultiBytes($zd_4fb0c_748) { if (function_exists('mb_strlen')) { return (strlen($zd_4fb0c_748) > mb_strlen($zd_4fb0c_748, $zd_67e0a_8->CharSet)); } else { return false; } } public function Base64EncodeWrapMB($zd_4fb0c_748) { $zd_8c543_838 = "=?".$zd_67e0a_8->CharSet."?B?"; $zd_ab0b5_840 = "?="; $zd_1011a_750 = ""; $zd_51cbe_842 = mb_strlen($zd_4fb0c_748, $zd_67e0a_8->CharSet); $zd_76979_37 = 75 - strlen($zd_8c543_838) - strlen($zd_ab0b5_840); $zd_87d6e_848 = $zd_51cbe_842 / strlen($zd_4fb0c_748); $zd_bdc8c_851 = $zd_5b902_852 = floor($zd_76979_37 * $zd_87d6e_848 * .75); for ($zd_6a549_56 = 0; $zd_6a549_56 < $zd_51cbe_842; $zd_6a549_56 += $zd_bdc8c_851) { $zd_19afd_154 = 0; do { $zd_bdc8c_851 = $zd_5b902_852 - $zd_19afd_154; $zd_f55ce_864 = mb_substr($zd_4fb0c_748, $zd_6a549_56, $zd_bdc8c_851, $zd_67e0a_8->CharSet); $zd_f55ce_864 = base64_encode($zd_f55ce_864); $zd_19afd_154++; } while (strlen($zd_f55ce_864) > $zd_76979_37); $zd_1011a_750 .= $zd_f55ce_864 . $zd_67e0a_8->LE; } $zd_1011a_750 = substr($zd_1011a_750, 0, -strlen($zd_67e0a_8->LE)); return $zd_1011a_750; } public function EncodeQPphp( $zd_14426_881 = '', $zd_4efe7_882 = 76, $zd_382da_883 = false) { $zd_98893_164 = array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'); $zd_5354e_885 = preg_split('/(?:\r\n|\r|\n)/', $zd_14426_881); $zd_376db_887 = "\r\n"; $zd_8471b_888 = '='; $zd_1a199_889 = ''; foreach ($zd_5354e_885 as $zd_5aae4_52) { $zd_53ec7_892 = strlen($zd_5aae4_52); $zd_73f3d_894 = ''; for($zd_6a549_56 = 0; $zd_6a549_56 < $zd_53ec7_892; $zd_6a549_56++) { $zd_2ba4a_899 = substr( $zd_5aae4_52, $zd_6a549_56, 1 ); $zd_0f47d_169 = ord( $zd_2ba4a_899 ); if ( ( $zd_6a549_56 == 0 ) && ( $zd_0f47d_169 == 46 ) ) { $zd_2ba4a_899 = '=2E'; } if ( $zd_0f47d_169 == 32 ) { if ( $zd_6a549_56 == ( $zd_53ec7_892 - 1 ) ) { $zd_2ba4a_899 = '=20'; } else if ( $zd_382da_883 ) { $zd_2ba4a_899 = '=20'; } } elseif ( ($zd_0f47d_169 == 61) || ($zd_0f47d_169 < 32 ) || ($zd_0f47d_169 > 126) ) { $zd_5d222_916 = floor($zd_0f47d_169/16); $zd_46d6c_918 = floor($zd_0f47d_169%16); $zd_2ba4a_899 = $zd_8471b_888.$zd_98893_164[$zd_5d222_916].$zd_98893_164[$zd_46d6c_918]; } if ( (strlen($zd_73f3d_894) + strlen($zd_2ba4a_899)) >= $zd_4efe7_882 ) { $zd_1a199_889 .= $zd_73f3d_894.$zd_8471b_888.$zd_376db_887; $zd_73f3d_894 = ''; if ( $zd_0f47d_169 == 46 ) { $zd_2ba4a_899 = '=2E'; } } $zd_73f3d_894 .= $zd_2ba4a_899; } $zd_1a199_889 .= $zd_73f3d_894.$zd_376db_887; } return $zd_1a199_889; } public function EncodeQP($zd_a8e4f_657, $zd_4efe7_882 = 76, $zd_382da_883 = false) { if (function_exists('quoted_printable_encode')) { return quoted_printable_encode($zd_a8e4f_657); } $zd_e48bf_946 = stream_get_filters(); if (!in_array('convert.*', $zd_e48bf_946)) { return $zd_67e0a_8->EncodeQPphp($zd_a8e4f_657, $zd_4efe7_882, $zd_382da_883); } $zd_02cb9_952 = fopen('php://temp/', 'r+'); $zd_a8e4f_657 = preg_replace('/\r\n?/', $zd_67e0a_8->LE, $zd_a8e4f_657); $zd_c07ff_956 = array('line-length' => $zd_4efe7_882, 'line-break-chars' => $zd_67e0a_8->LE); $zd_679b8_959 = stream_filter_append($zd_02cb9_952, 'convert.quoted-printable-encode', STREAM_FILTER_READ, $zd_c07ff_956); fputs($zd_02cb9_952, $zd_a8e4f_657); rewind($zd_02cb9_952); $zd_b3206_965 = stream_get_contents($zd_02cb9_952); stream_filter_remove($zd_679b8_959); $zd_b3206_965 = preg_replace('/^\./m', '=2E', $zd_b3206_965); fclose($zd_02cb9_952); return $zd_b3206_965; } public function EncodeQ($zd_4fb0c_748, $zd_0b6c6_773 = 'text') { $zd_1011a_750 = preg_replace('/[\r\n]*/', '', $zd_4fb0c_748); switch (strtolower($zd_0b6c6_773)) { case 'phrase': $zd_1011a_750 = preg_replace_callback("/([^A-Za-z0-9!*+\/ -])/", array($zd_67e0a_8, 'sprintf_1_callback'), $zd_1011a_750); break; case 'comment': $zd_1011a_750 = preg_replace_callback("/([\(\)\"])/", array($zd_67e0a_8, 'sprintf_1_callback'), $zd_1011a_750); case 'text': default: $zd_1011a_750 = preg_replace_callback('/([\000-\011\013\014\016-\037\075\077\137\177-\377])/', array($zd_67e0a_8, 'sprintf_2_callback'), $zd_1011a_750); break; } $zd_1011a_750 = str_replace(' ', '_', $zd_1011a_750); return $zd_1011a_750; } private function sprintf_1_callback($zd_2ebe1_989) { return '='.sprintf('%02X', ord($zd_2ebe1_989[1])); } private function sprintf_2_callback($zd_2ebe1_989) { return '='.sprintf('%02X', ord(stripslashes($zd_2ebe1_989[1]))); } public function AddStringAttachment($zd_a8e4f_657, $zd_b9bac_625, $zd_b1457_570 = 'base64', $zd_51bd2_12 = 'application/octet-stream') { $zd_67e0a_8->attachment[] = array( 0 => $zd_a8e4f_657, 1 => $zd_b9bac_625, 2 => basename($zd_b9bac_625), 3 => $zd_b1457_570, 4 => $zd_51bd2_12, 5 => true, 6 => 'attachment', 7 => 0 ); } public function AddEmbeddedImage($zd_fac17_618, $zd_f843b_677, $zd_43d33_610 = '', $zd_b1457_570 = 'base64', $zd_51bd2_12 = 'application/octet-stream') { if ( !@is_file($zd_fac17_618) ) { $zd_67e0a_8->SetError($zd_67e0a_8->Lang('file_access') . $zd_fac17_618); return false; } $zd_b9bac_625 = basename($zd_fac17_618); if ( $zd_43d33_610 == '' ) { $zd_43d33_610 = $zd_b9bac_625; } $zd_67e0a_8->attachment[] = array( 0 => $zd_fac17_618, 1 => $zd_b9bac_625, 2 => $zd_43d33_610, 3 => $zd_b1457_570, 4 => $zd_51bd2_12, 5 => false, 6 => 'inline', 7 => $zd_f843b_677 ); return true; } public function AddStringEmbeddedImage($zd_a8e4f_657, $zd_f843b_677, $zd_b9bac_625 = '', $zd_b1457_570 = 'base64', $zd_51bd2_12 = 'application/octet-stream') { $zd_67e0a_8->attachment[] = array( 0 => $zd_a8e4f_657, 1 => $zd_b9bac_625, 2 => basename($zd_b9bac_625), 3 => $zd_b1457_570, 4 => $zd_51bd2_12, 5 => true, 6 => 'inline', 7 => $zd_f843b_677 ); } public function InlineImageExists() { foreach($zd_67e0a_8->attachment as $zd_3043b_651) { if ($zd_3043b_651[6] == 'inline') { return true; } } return false; } public function AttachmentExists() { foreach($zd_67e0a_8->attachment as $zd_3043b_651) { if ($zd_3043b_651[6] == 'attachment') { return true; } } return false; } public function AlternativeExists() { return strlen($zd_67e0a_8->AltBody)>0; } public function ClearAddresses() { foreach($zd_67e0a_8->to as $zd_3ca3a_1044) { unset($zd_67e0a_8->all_recipients[strtolower($zd_3ca3a_1044[0])]); } $zd_67e0a_8->to = array(); } public function ClearCCs() { foreach($zd_67e0a_8->cc as $zd_5670b_1049) { unset($zd_67e0a_8->all_recipients[strtolower($zd_5670b_1049[0])]); } $zd_67e0a_8->cc = array(); } public function ClearBCCs() { foreach($zd_67e0a_8->bcc as $zd_54e40_1054) { unset($zd_67e0a_8->all_recipients[strtolower($zd_54e40_1054[0])]); } $zd_67e0a_8->bcc = array(); } public function ClearReplyTos() { $zd_67e0a_8->ReplyTo = array(); } public function ClearAllRecipients() { $zd_67e0a_8->to = array(); $zd_67e0a_8->cc = array(); $zd_67e0a_8->bcc = array(); $zd_67e0a_8->all_recipients = array(); } public function ClearAttachments() { $zd_67e0a_8->attachment = array(); } public function ClearCustomHeaders() { $zd_67e0a_8->CustomHeader = array(); } protected function SetError($zd_1d1c3_1065) { $zd_67e0a_8->error_count++; if ($zd_67e0a_8->Mailer == 'smtp' and !is_null($zd_67e0a_8->smtp)) { $zd_7ba49_1069 = $zd_67e0a_8->smtp->getError(); if (!empty($zd_7ba49_1069) and array_key_exists('smtp_msg', $zd_7ba49_1069)) { $zd_1d1c3_1065 .= '<p>' . $zd_67e0a_8->Lang('smtp_error') . $zd_7ba49_1069['smtp_msg'] . "</p>\n"; } } $zd_67e0a_8->ErrorInfo = $zd_1d1c3_1065; } public static function RFCDate() { $zd_5a833_1078 = date('Z'); $zd_9e1b8_1079 = ($zd_5a833_1078 < 0) ? '-' : '+'; $zd_5a833_1078 = abs($zd_5a833_1078); $zd_5a833_1078 = (int)($zd_5a833_1078/3600)*100 + ($zd_5a833_1078%3600)/60; $zd_375c4_199 = sprintf("%s %s%04d", date('D, j M Y H:i:s'), $zd_9e1b8_1079, $zd_5a833_1078); return $zd_375c4_199; } protected function ServerHostname() { if (!empty($zd_67e0a_8->Hostname)) { $zd_375c4_199 = $zd_67e0a_8->Hostname; } elseif (isset($_SERVER['SERVER_NAME'])) { $zd_375c4_199 = $_SERVER['SERVER_NAME']; } else { $zd_375c4_199 = 'localhost.localdomain'; } return $zd_375c4_199; } protected function Lang($zd_59846_1096) { if(count($zd_67e0a_8->language) < 1) { $zd_67e0a_8->SetLanguage('en'); } if(isset($zd_67e0a_8->language[$zd_59846_1096])) { return $zd_67e0a_8->language[$zd_59846_1096]; } else { return 'Language string failed to load: ' . $zd_59846_1096; } } public function IsError() { return ($zd_67e0a_8->error_count > 0); } public function FixEOL($zd_4fb0c_748) { $zd_4fb0c_748 = str_replace("\r\n", "\n", $zd_4fb0c_748); $zd_4fb0c_748 = str_replace("\r", "\n", $zd_4fb0c_748); $zd_4fb0c_748 = str_replace("\n", $zd_67e0a_8->LE, $zd_4fb0c_748); return $zd_4fb0c_748; } public function AddCustomHeader($zd_e1ac8_1114) { $zd_67e0a_8->CustomHeader[] = explode(':', $zd_e1ac8_1114, 2); } public function MsgHTML($zd_c3783_36, $zd_7b960_1118 = '') { preg_match_all("/(src|background)=[\"'](.*)[\"']/Ui", $zd_c3783_36, $zd_44c85_1120); if(isset($zd_44c85_1120[2])) { foreach($zd_44c85_1120[2] as $zd_6a549_56 => $zd_dea11_1124) { if (!preg_match('#^[A-z]+://#', $zd_dea11_1124)) { $zd_b9bac_625 = basename($zd_dea11_1124); $zd_28fd2_1128 = dirname($zd_dea11_1124); ($zd_28fd2_1128 == '.') ? $zd_28fd2_1128='': ''; $zd_f843b_677 = 'cid:' . md5($zd_b9bac_625); $zd_cdb54_1134 = pathinfo($zd_b9bac_625, PATHINFO_EXTENSION); $zd_1afe2_1136 = self::_mime_types($zd_cdb54_1134); if ( strlen($zd_7b960_1118) > 1 && substr($zd_7b960_1118, -1) != '/') { $zd_7b960_1118 .= '/'; } if ( strlen($zd_28fd2_1128) > 1 && substr($zd_28fd2_1128, -1) != '/') { $zd_28fd2_1128 .= '/'; } if ( $zd_67e0a_8->AddEmbeddedImage($zd_7b960_1118.$zd_28fd2_1128.$zd_b9bac_625, md5($zd_b9bac_625), $zd_b9bac_625, 'base64', $zd_1afe2_1136) ) { $zd_c3783_36 = preg_replace("/".$zd_44c85_1120[1][$zd_6a549_56]."=[\"']".preg_quote($zd_dea11_1124, '/')."[\"']/Ui", $zd_44c85_1120[1][$zd_6a549_56]."=\"".$zd_f843b_677."\"", $zd_c3783_36); } } } } $zd_67e0a_8->IsHTML(true); $zd_67e0a_8->Body = $zd_c3783_36; if (empty($zd_67e0a_8->AltBody)) { $zd_2f632_1163 = trim(strip_tags(preg_replace('/<(head|title|style|script)[^>]*>.*?<\/\\1>/s', '', $zd_c3783_36))); if (!empty($zd_2f632_1163)) { $zd_67e0a_8->AltBody = html_entity_decode($zd_2f632_1163, ENT_QUOTES, $zd_67e0a_8->CharSet); } } if (empty($zd_67e0a_8->AltBody)) { $zd_67e0a_8->AltBody = 'To view this email message, open it in a program that understands HTML!' . "\n\n"; } return $zd_c3783_36; } public static function _mime_types($zd_cdb54_1134 = '') { $zd_e99f6_1173 = array( 'hqx' => 'application/mac-binhex40', 'cpt' => 'application/mac-compactpro', 'doc' => 'application/msword', 'bin' => 'application/macbinary', 'dms' => 'application/octet-stream', 'lha' => 'application/octet-stream', 'lzh' => 'application/octet-stream', 'exe' => 'application/octet-stream', 'class' => 'application/octet-stream', 'psd' => 'application/octet-stream', 'so' => 'application/octet-stream', 'sea' => 'application/octet-stream', 'dll' => 'application/octet-stream', 'oda' => 'application/oda', 'pdf' => 'application/pdf', 'ai' => 'application/postscript', 'eps' => 'application/postscript', 'ps' => 'application/postscript', 'smi' => 'application/smil', 'smil' => 'application/smil', 'mif' => 'application/vnd.mif', 'xls' => 'application/vnd.ms-excel', 'ppt' => 'application/vnd.ms-powerpoint', 'wbxml' => 'application/vnd.wap.wbxml', 'wmlc' => 'application/vnd.wap.wmlc', 'dcr' => 'application/x-director', 'dir' => 'application/x-director', 'dxr' => 'application/x-director', 'dvi' => 'application/x-dvi', 'gtar' => 'application/x-gtar', 'php' => 'application/x-httpd-php', 'php4' => 'application/x-httpd-php', 'php3' => 'application/x-httpd-php', 'phtml' => 'application/x-httpd-php', 'phps' => 'application/x-httpd-php-source', 'js' => 'application/x-javascript', 'swf' => 'application/x-shockwave-flash', 'sit' => 'application/x-stuffit', 'tar' => 'application/x-tar', 'tgz' => 'application/x-tar', 'xhtml' => 'application/xhtml+xml', 'xht' => 'application/xhtml+xml', 'zip' => 'application/zip', 'mid' => 'audio/midi', 'midi' => 'audio/midi', 'mpga' => 'audio/mpeg', 'mp2' => 'audio/mpeg', 'mp3' => 'audio/mpeg', 'aif' => 'audio/x-aiff', 'aiff' => 'audio/x-aiff', 'aifc' => 'audio/x-aiff', 'ram' => 'audio/x-pn-realaudio', 'rm' => 'audio/x-pn-realaudio', 'rpm' => 'audio/x-pn-realaudio-plugin', 'ra' => 'audio/x-realaudio', 'rv' => 'video/vnd.rn-realvideo', 'wav' => 'audio/x-wav', 'bmp' => 'image/bmp', 'gif' => 'image/gif', 'jpeg' => 'image/jpeg', 'jpg' => 'image/jpeg', 'jpe' => 'image/jpeg', 'png' => 'image/png', 'tiff' => 'image/tiff', 'tif' => 'image/tiff', 'css' => 'text/css', 'html' => 'text/html', 'htm' => 'text/html', 'shtml' => 'text/html', 'txt' => 'text/plain', 'text' => 'text/plain', 'log' => 'text/plain', 'rtx' => 'text/richtext', 'rtf' => 'text/rtf', 'xml' => 'text/xml', 'xsl' => 'text/xml', 'mpeg' => 'video/mpeg', 'mpg' => 'video/mpeg', 'mpe' => 'video/mpeg', 'qt' => 'video/quicktime', 'mov' => 'video/quicktime', 'avi' => 'video/x-msvideo', 'movie' => 'video/x-sgi-movie', 'doc' => 'application/msword', 'word' => 'application/msword', 'xl' => 'application/excel', 'eml' => 'message/rfc822' ); return (!isset($zd_e99f6_1173[strtolower($zd_cdb54_1134)])) ? 'application/octet-stream' : $zd_e99f6_1173[strtolower($zd_cdb54_1134)]; } public function set($zd_43d33_610, $zd_1a091_611 = '') { try { if (isset($zd_67e0a_8->$zd_43d33_610) ) { $zd_67e0a_8->$zd_43d33_610 = $zd_1a091_611; } else { throw new phpmailerException($zd_67e0a_8->Lang('variable_set') . $zd_43d33_610, self::STOP_CRITICAL); } } catch (Exception $zd_fd4e3_64) { $zd_67e0a_8->SetError($zd_fd4e3_64->getMessage()); if ($zd_fd4e3_64->getCode() == self::STOP_CRITICAL) { return false; } } return true; } public function SecureHeader($zd_4fb0c_748) { $zd_4fb0c_748 = str_replace("\r", '', $zd_4fb0c_748); $zd_4fb0c_748 = str_replace("\n", '', $zd_4fb0c_748); return trim($zd_4fb0c_748); } public function Sign($zd_90c2d_1197, $zd_3b2df_1198, $zd_9965d_1199) { $zd_67e0a_8->sign_cert_file = $zd_90c2d_1197; $zd_67e0a_8->sign_key_file = $zd_3b2df_1198; $zd_67e0a_8->sign_key_pass = $zd_9965d_1199; } public function DKIM_QP($zd_18b77_1206) { $zd_c5fa7_1207 = ''; $zd_5aae4_52 = ''; for ($zd_6a549_56 = 0; $zd_6a549_56 < strlen($zd_18b77_1206); $zd_6a549_56++) { $zd_f1663_1213 = ord($zd_18b77_1206[$zd_6a549_56]); if ( ((0x21 <= $zd_f1663_1213) && ($zd_f1663_1213 <= 0x3A)) || $zd_f1663_1213 == 0x3C || ((0x3E <= $zd_f1663_1213) && ($zd_f1663_1213 <= 0x7E)) ) { $zd_5aae4_52 .= $zd_18b77_1206[$zd_6a549_56]; } else { $zd_5aae4_52 .= "=".sprintf("%02X", $zd_f1663_1213); } } return $zd_5aae4_52; } public function DKIM_Sign($zd_679b8_959) { $zd_e2c2b_1228 = file_get_contents($zd_67e0a_8->DKIM_private); if ($zd_67e0a_8->DKIM_passphrase != '') { $zd_8e710_1231 = openssl_pkey_get_private($zd_e2c2b_1228, $zd_67e0a_8->DKIM_passphrase); } else { $zd_8e710_1231 = $zd_e2c2b_1228; } if (openssl_sign($zd_679b8_959, $zd_3d0ce_1237, $zd_8e710_1231)) { return base64_encode($zd_3d0ce_1237); } } public function DKIM_HeaderC($zd_679b8_959) { $zd_679b8_959 = preg_replace("/\r\n\s+/", " ", $zd_679b8_959); $zd_5354e_885 = explode("\r\n", $zd_679b8_959); foreach ($zd_5354e_885 as $zd_59846_1096 => $zd_5aae4_52) { list($zd_8efa8_1248, $zd_1a091_611) = explode(":", $zd_5aae4_52, 2); $zd_8efa8_1248 = strtolower($zd_8efa8_1248); $zd_1a091_611 = preg_replace("/\s+/", " ", $zd_1a091_611) ; $zd_5354e_885[$zd_59846_1096] = $zd_8efa8_1248.":".trim($zd_1a091_611) ; } $zd_679b8_959 = implode("\r\n", $zd_5354e_885); return $zd_679b8_959; } public function DKIM_BodyC($zd_bcb81_327) { if ($zd_bcb81_327 == '') return "\r\n"; $zd_bcb81_327 = str_replace("\r\n", "\n", $zd_bcb81_327); $zd_bcb81_327 = str_replace("\n", "\r\n", $zd_bcb81_327); while (substr($zd_bcb81_327, strlen($zd_bcb81_327) - 4, 4) == "\r\n\r\n") { $zd_bcb81_327 = substr($zd_bcb81_327, 0, strlen($zd_bcb81_327) - 2); } return $zd_bcb81_327; } public function DKIM_Add($zd_a0afb_1274, $zd_702fc_1275, $zd_bcb81_327) { $zd_b403d_1277 = 'rsa-sha1'; $zd_a48c1_1278 = 'relaxed/simple'; $zd_57977_1279 = 'dns/txt'; $zd_cad58_1280 = time() ; $zd_9648a_1281 = "Subject: $zd_702fc_1275"; $zd_1e542_1283 = explode($zd_67e0a_8->LE, $zd_a0afb_1274); foreach($zd_1e542_1283 as $zd_a4336_1287) { if (strpos($zd_a4336_1287, 'From:') === 0) { $zd_54875_1289 = $zd_a4336_1287; } elseif (strpos($zd_a4336_1287, 'To:') === 0) { $zd_c6310_1292 = $zd_a4336_1287; } } $zd_43de3_230 = str_replace('|', '=7C', $zd_67e0a_8->DKIM_QP($zd_54875_1289)); $zd_3ca3a_1044 = str_replace('|', '=7C', $zd_67e0a_8->DKIM_QP($zd_c6310_1292)); $zd_702fc_1275 = str_replace('|', '=7C', $zd_67e0a_8->DKIM_QP($zd_9648a_1281)) ; $zd_bcb81_327 = $zd_67e0a_8->DKIM_BodyC($zd_bcb81_327); $zd_aecbd_1306 = strlen($zd_bcb81_327) ; $zd_b4b57_1308 = base64_encode(pack("H*", sha1($zd_bcb81_327))) ; $zd_7cf79_1310 = ($zd_67e0a_8->DKIM_identity == '')? '' : " i=" . $zd_67e0a_8->DKIM_identity . ";"; $zd_ad51b_1313 = "DKIM-Signature: v=1; a=" . $zd_b403d_1277 . "; q=" . $zd_57977_1279 . "; l=" . $zd_aecbd_1306 . "; s=" . $zd_67e0a_8->DKIM_selector . ";\r\n". "\tt=" . $zd_cad58_1280 . "; c=" . $zd_a48c1_1278 . ";\r\n". "\th=From:To:Subject;\r\n". "\td=" . $zd_67e0a_8->DKIM_domain . ";" . $zd_7cf79_1310 . "\r\n". "\tz=$zd_43de3_230\r\n". "\t|$zd_3ca3a_1044\r\n". "\t|$zd_702fc_1275;\r\n". "\tbh=" . $zd_b4b57_1308 . ";\r\n". "\tb="; $zd_e3241_1326 = $zd_67e0a_8->DKIM_HeaderC($zd_54875_1289 . "\r\n" . $zd_c6310_1292 . "\r\n" . $zd_9648a_1281 . "\r\n" . $zd_ad51b_1313); $zd_cbd9b_549 = $zd_67e0a_8->DKIM_Sign($zd_e3241_1326); return "X-PHPMAILER-DKIM: phpmailer.worxware.com\r\n".$zd_ad51b_1313.$zd_cbd9b_549."\r\n"; } protected function doCallback($zd_3c24a_1337, $zd_3ca3a_1044, $zd_5670b_1049, $zd_54e40_1054, $zd_702fc_1275, $zd_bcb81_327) { if (!empty($zd_67e0a_8->action_function) && function_exists($zd_67e0a_8->action_function)) { $zd_c07ff_956 = array($zd_3c24a_1337, $zd_3ca3a_1044, $zd_5670b_1049, $zd_54e40_1054, $zd_702fc_1275, $zd_bcb81_327); call_user_func_array($zd_67e0a_8->action_function, $zd_c07ff_956); } } } class phpmailerException extends Exception { public function errorMessage() { $zd_53c75_1354 = '<strong>' . $zd_67e0a_8->getMessage() . "</strong><br />\n"; return $zd_53c75_1354; } } class SMTP { public $zd_bc9be_1357 = 25; public $zd_0792b_1358 = "\r\n"; public $zd_f304b_1359; public $zd_04565_1360 = false; public $zd_cdc67_1361 = '5.2.1'; private $zd_b57c5_1362; private $zd_b8e70_1363; private $zd_4aeeb_1364; public function __construct() { $zd_67e0a_8->smtp_conn = 0; $zd_67e0a_8->error = null; $zd_67e0a_8->helo_rply = null; $zd_67e0a_8->do_debug = 0; } public function Connect($zd_b558e_1369, $zd_2a14f_1370 = 0, $zd_7b409_1371 = 5) { $zd_67e0a_8->error = null; if($zd_67e0a_8->connected()) { $zd_67e0a_8->error = array("error" => "Already connected to a server"); return false; } if(empty($zd_2a14f_1370)) { $zd_2a14f_1370 = $zd_67e0a_8->SMTP_PORT; } $zd_3e5ce_1378 = 0; $zd_7351f_1379 = ''; $zd_67e0a_8->smtp_conn = @fsockopen($zd_b558e_1369, $zd_2a14f_1370, $zd_3e5ce_1378, $zd_7351f_1379, $zd_7b409_1371); if(empty($zd_67e0a_8->smtp_conn)) { $zd_67e0a_8->error = array("error" => "Failed to connect to server", "errno" => $zd_3e5ce_1378, "errstr" => $zd_7351f_1379); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": $zd_7351f_1379 ($zd_3e5ce_1378)" . $zd_67e0a_8->CRLF . '<br />'; } return false; } if(substr(PHP_OS, 0, 3) != "WIN") socket_set_timeout($zd_67e0a_8->smtp_conn, $zd_7b409_1371, 0); $zd_31a19_1397 = $zd_67e0a_8->get_lines(); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER:" . $zd_31a19_1397 . $zd_67e0a_8->CRLF . '<br />'; } return true; } public function StartTLS() { $zd_67e0a_8->error = null; if(!$zd_67e0a_8->connected()) { $zd_67e0a_8->error = array("error" => "Called StartTLS() without being connected"); return false; } fputs($zd_67e0a_8->smtp_conn,"STARTTLS" . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER:" . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } if($zd_42bc2_1409 != 220) { $zd_67e0a_8->error = array("error" => "STARTTLS not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } if(!stream_socket_enable_crypto($zd_67e0a_8->smtp_conn, true, STREAM_CRYPTO_METHOD_TLS_CLIENT)) { return false; } return true; } public function Authenticate($zd_814c3_1423, $zd_5d6e7_1424) { fputs($zd_67e0a_8->smtp_conn,"AUTH LOGIN" . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_42bc2_1409 != 334) { $zd_67e0a_8->error = array("error" => "AUTH not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } fputs($zd_67e0a_8->smtp_conn, base64_encode($zd_814c3_1423) . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_42bc2_1409 != 334) { $zd_67e0a_8->error = array("error" => "Username not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } fputs($zd_67e0a_8->smtp_conn, base64_encode($zd_5d6e7_1424) . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_42bc2_1409 != 235) { $zd_67e0a_8->error = array("error" => "Password not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } return true; } public function Connected() { if(!empty($zd_67e0a_8->smtp_conn)) { $zd_cc6d8_1470 = socket_get_status($zd_67e0a_8->smtp_conn); if($zd_cc6d8_1470["eof"]) { if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> NOTICE:" . $zd_67e0a_8->CRLF . "EOF caught while checking if connected"; } $zd_67e0a_8->Close(); return false; } return true; } return false; } public function Close() { $zd_67e0a_8->error = null; $zd_67e0a_8->helo_rply = null; if(!empty($zd_67e0a_8->smtp_conn)) { fclose($zd_67e0a_8->smtp_conn); $zd_67e0a_8->smtp_conn = 0; } } public function Data($zd_6b0f0_1481) { $zd_67e0a_8->error = null; if(!$zd_67e0a_8->connected()) { $zd_67e0a_8->error = array( "error" => "Called Data() without being connected"); return false; } fputs($zd_67e0a_8->smtp_conn,"DATA" . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER:" . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } if($zd_42bc2_1409 != 354) { $zd_67e0a_8->error = array("error" => "DATA command not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } $zd_6b0f0_1481 = str_replace("\r\n","\n",$zd_6b0f0_1481); $zd_6b0f0_1481 = str_replace("\r","\n",$zd_6b0f0_1481); $zd_5354e_885 = explode("\n",$zd_6b0f0_1481); $zd_e5a1f_1508 = substr($zd_5354e_885[0],0,strpos($zd_5354e_885[0],":")); $zd_332b3_1511 = false; if(!empty($zd_e5a1f_1508) && !strstr($zd_e5a1f_1508," ")) { $zd_332b3_1511 = true; } $zd_8070f_1515 = 998; foreach ($zd_5354e_885 as $zd_5aae4_52) { $zd_532c5_1518 = null; if($zd_5aae4_52 == "" && $zd_332b3_1511) { $zd_332b3_1511 = false; } while(strlen($zd_5aae4_52) > $zd_8070f_1515) { $zd_f1124_1524 = strrpos(substr($zd_5aae4_52,0,$zd_8070f_1515)," "); if(!$zd_f1124_1524) { $zd_f1124_1524 = $zd_8070f_1515 - 1; $zd_532c5_1518[] = substr($zd_5aae4_52,0,$zd_f1124_1524); $zd_5aae4_52 = substr($zd_5aae4_52,$zd_f1124_1524); } else { $zd_532c5_1518[] = substr($zd_5aae4_52,0,$zd_f1124_1524); $zd_5aae4_52 = substr($zd_5aae4_52,$zd_f1124_1524 + 1); } if($zd_332b3_1511) { $zd_5aae4_52 = "\t" . $zd_5aae4_52; } } $zd_532c5_1518[] = $zd_5aae4_52; foreach ($zd_532c5_1518 as $zd_c0aee_1548) { if(strlen($zd_c0aee_1548) > 0) { if(substr($zd_c0aee_1548, 0, 1) == ".") { $zd_c0aee_1548 = "." . $zd_c0aee_1548; } } fputs($zd_67e0a_8->smtp_conn,$zd_c0aee_1548 . $zd_67e0a_8->CRLF); } } fputs($zd_67e0a_8->smtp_conn, $zd_67e0a_8->CRLF . "." . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER:" . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } if($zd_42bc2_1409 != 250) { $zd_67e0a_8->error = array("error" => "DATA not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } return true; } public function Hello($zd_b558e_1369 = '') { $zd_67e0a_8->error = null; if(!$zd_67e0a_8->connected()) { $zd_67e0a_8->error = array( "error" => "Called Hello() without being connected"); return false; } if(empty($zd_b558e_1369)) { $zd_b558e_1369 = "localhost"; } if(!$zd_67e0a_8->SendHello("EHLO", $zd_b558e_1369)) { if(!$zd_67e0a_8->SendHello("HELO", $zd_b558e_1369)) { return false; } } return true; } private function SendHello($zd_2fc0b_1584, $zd_b558e_1369) { fputs($zd_67e0a_8->smtp_conn, $zd_2fc0b_1584 . " " . $zd_b558e_1369 . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER: " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } if($zd_42bc2_1409 != 250) { $zd_67e0a_8->error = array("error" => $zd_2fc0b_1584 . " not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } $zd_67e0a_8->helo_rply = $zd_55a07_1407; return true; } public function Mail($zd_43de3_230) { $zd_67e0a_8->error = null; if(!$zd_67e0a_8->connected()) { $zd_67e0a_8->error = array( "error" => "Called Mail() without being connected"); return false; } $zd_67949_1612 = ($zd_67e0a_8->do_verp ? "XVERP" : ""); fputs($zd_67e0a_8->smtp_conn,"MAIL FROM:<" . $zd_43de3_230 . ">" . $zd_67949_1612 . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER:" . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } if($zd_42bc2_1409 != 250) { $zd_67e0a_8->error = array("error" => "MAIL not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } return true; } public function Quit($zd_0a977_1633 = true) { $zd_67e0a_8->error = null; if(!$zd_67e0a_8->connected()) { $zd_67e0a_8->error = array( "error" => "Called Quit() without being connected"); return false; } fputs($zd_67e0a_8->smtp_conn,"quit" . $zd_67e0a_8->CRLF); $zd_162b4_1639 = $zd_67e0a_8->get_lines(); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER:" . $zd_162b4_1639 . $zd_67e0a_8->CRLF . '<br />'; } $zd_06a7f_1644 = true; $zd_fd4e3_64 = null; $zd_42bc2_1409 = substr($zd_162b4_1639,0,3); if($zd_42bc2_1409 != 221) { $zd_fd4e3_64 = array("error" => "SMTP server rejected quit command", "smtp_code" => $zd_42bc2_1409, "smtp_rply" => substr($zd_162b4_1639,4)); $zd_06a7f_1644 = false; if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_fd4e3_64["error"] . ": " . $zd_162b4_1639 . $zd_67e0a_8->CRLF . '<br />'; } } if(empty($zd_fd4e3_64) || $zd_0a977_1633) { $zd_67e0a_8->Close(); } return $zd_06a7f_1644; } public function Recipient($zd_3ca3a_1044) { $zd_67e0a_8->error = null; if(!$zd_67e0a_8->connected()) { $zd_67e0a_8->error = array( "error" => "Called Recipient() without being connected"); return false; } fputs($zd_67e0a_8->smtp_conn,"RCPT TO:<" . $zd_3ca3a_1044 . ">" . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER:" . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } if($zd_42bc2_1409 != 250 && $zd_42bc2_1409 != 251) { $zd_67e0a_8->error = array("error" => "RCPT not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } return true; } public function Reset() { $zd_67e0a_8->error = null; if(!$zd_67e0a_8->connected()) { $zd_67e0a_8->error = array( "error" => "Called Reset() without being connected"); return false; } fputs($zd_67e0a_8->smtp_conn,"RSET" . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER:" . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } if($zd_42bc2_1409 != 250) { $zd_67e0a_8->error = array("error" => "RSET failed", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } return true; } public function SendAndMail($zd_43de3_230) { $zd_67e0a_8->error = null; if(!$zd_67e0a_8->connected()) { $zd_67e0a_8->error = array( "error" => "Called SendAndMail() without being connected"); return false; } fputs($zd_67e0a_8->smtp_conn,"SAML FROM:" . $zd_43de3_230 . $zd_67e0a_8->CRLF); $zd_55a07_1407 = $zd_67e0a_8->get_lines(); $zd_42bc2_1409 = substr($zd_55a07_1407,0,3); if($zd_67e0a_8->do_debug >= 2) { echo "SMTP -> FROM SERVER:" . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } if($zd_42bc2_1409 != 250) { $zd_67e0a_8->error = array("error" => "SAML not accepted from server", "smtp_code" => $zd_42bc2_1409, "smtp_msg" => substr($zd_55a07_1407,4)); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> ERROR: " . $zd_67e0a_8->error["error"] . ": " . $zd_55a07_1407 . $zd_67e0a_8->CRLF . '<br />'; } return false; } return true; } public function Turn() { $zd_67e0a_8->error = array("error" => "This method, TURN, of the SMTP ". "is not implemented"); if($zd_67e0a_8->do_debug >= 1) { echo "SMTP -> NOTICE: " . $zd_67e0a_8->error["error"] . $zd_67e0a_8->CRLF . '<br />'; } return false; } public function getError() { return $zd_67e0a_8->error; } private function get_lines() { $zd_5a404_1731 = ""; while(!feof($zd_67e0a_8->smtp_conn)) { $zd_4fb0c_748 = @fgets($zd_67e0a_8->smtp_conn,515); if($zd_67e0a_8->do_debug >= 4) { echo "SMTP -> get_lines(): \$zd_5a404_1731 was \"$zd_5a404_1731\"" . $zd_67e0a_8->CRLF . '<br />'; echo "SMTP -> get_lines(): \$zd_4fb0c_748 is \"$zd_4fb0c_748\"" . $zd_67e0a_8->CRLF . '<br />'; } $zd_5a404_1731 .= $zd_4fb0c_748; if($zd_67e0a_8->do_debug >= 4) { echo "SMTP -> get_lines(): \$zd_5a404_1731 is \"$zd_5a404_1731\"" . $zd_67e0a_8->CRLF . '<br />'; } if(substr($zd_4fb0c_748,3,1) == " ") { break; } } return $zd_5a404_1731; } } function xn_send_mail($zd_8e293_0, $zd_811cf_1, $zd_1c2de_2, $zd_4c955_3, $zd_29a42_4, $zd_6b085_5 = 'UTF-8') { // hook xn_send_mail_start.php $zd_1ab29_6 = new PHPMailer(); $zd_1ab29_6->IsSMTP(); $zd_1ab29_6->IsHTML(TRUE); $zd_1ab29_6->SMTPDebug = 0; $zd_1ab29_6->SMTPAuth = TRUE; $zd_1ab29_6->Host = $zd_8e293_0['host']; $zd_1ab29_6->Port = $zd_8e293_0['port']; $zd_1ab29_6->Username = $zd_8e293_0['user']; $zd_1ab29_6->Password = $zd_8e293_0['pass']; $zd_1ab29_6->Timeout = 5; $zd_1ab29_6->CharSet = $zd_6b085_5; $zd_1ab29_6->Encoding = 'base64'; $zd_1ab29_6->SetFrom($zd_8e293_0['email'], $zd_811cf_1); $zd_1ab29_6->AddReplyTo($zd_8e293_0['email'], $zd_1c2de_2); $zd_1ab29_6->Subject = $zd_4c955_3; $zd_1ab29_6->AltBody = $zd_29a42_4; $zd_29a42_4 = str_replace("\\",'',$zd_29a42_4); $zd_1ab29_6->MsgHTML($zd_29a42_4); $zd_1ab29_6->AddAddress($zd_1c2de_2, $zd_811cf_1); if(!$zd_1ab29_6->Send()) { return xn_error(-1, $zd_1ab29_6->ErrorInfo); } else { return TRUE; } // hook xn_send_mail_end.php } ?>
